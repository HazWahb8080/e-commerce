{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\jamstack-ecommerce\\\\context\\\\mainContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { toast } from 'react-toastify';\nimport React from 'react';\nconst STORAGE_KEY = 'NEXT_ECOMMERCE_STARTER_';\nconst initialState = {\n  cart: [],\n  numberOfItemsInCart: 0,\n  total: 0\n};\nconst SiteContext = /*#__PURE__*/React.createContext();\n\nfunction calculateTotal(cart) {\n  const total = cart.reduce((acc, next) => {\n    const quantity = next.quantity;\n    acc = acc + JSON.parse(next.price) * quantity;\n    return acc;\n  }, 0);\n  return total;\n}\n\nclass ContextProviderComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"setItemQuantity\", item => {\n      const storageState = JSON.parse(window.localStorage.getItem(STORAGE_KEY));\n      const {\n        cart\n      } = storageState;\n      const index = cart.findIndex(cartItem => cartItem.id === item.id);\n      cart[index].quantity = item.quantity;\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify({\n        cart,\n        numberOfItemsInCart: cart.length,\n        total: calculateTotal(cart)\n      }));\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"addToCart\", item => {\n      const storageState = JSON.parse(window.localStorage.getItem(STORAGE_KEY));\n      const {\n        cart\n      } = storageState;\n\n      if (cart.length) {\n        const index = cart.findIndex(cartItem => cartItem.id === item.id);\n\n        if (index >= Number(0)) {\n          /* If this item is already in the cart, update the quantity */\n          cart[index].quantity = cart[index].quantity + item.quantity;\n        } else {\n          /* If this item is not yet in the cart, add it */\n          cart.push(item);\n        }\n      } else {\n        /* If no items in the cart, add the first item. */\n        cart.push(item);\n      }\n\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify({\n        cart,\n        numberOfItemsInCart: cart.length,\n        total: calculateTotal(cart)\n      }));\n      toast(\"Successfully added item to cart!\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"removeFromCart\", item => {\n      const storageState = JSON.parse(window.localStorage.getItem(STORAGE_KEY));\n      let {\n        cart\n      } = storageState;\n      cart = cart.filter(c => c.id !== item.id);\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify({\n        cart,\n        numberOfItemsInCart: cart.length,\n        total: calculateTotal(cart)\n      }));\n      this.forceUpdate();\n    });\n\n    _defineProperty(this, \"clearCart\", () => {\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify(initialState));\n      this.forceUpdate();\n    });\n  }\n\n  componentDidMount() {\n    if (false) {\n      const storageState = window.localStorage.getItem(STORAGE_KEY);\n\n      if (!storageState) {\n        window.localStorage.setItem(STORAGE_KEY, JSON.stringify(initialState));\n      }\n    }\n  }\n\n  render() {\n    let state = initialState;\n\n    if (false) {\n      const storageState = window.localStorage.getItem(STORAGE_KEY);\n\n      if (storageState) {\n        state = JSON.parse(storageState);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(SiteContext.Provider, {\n      value: _objectSpread(_objectSpread({}, state), {}, {\n        addToCart: this.addToCart,\n        clearCart: this.clearCart,\n        removeFromCart: this.removeFromCart,\n        setItemQuantity: this.setItemQuantity\n      }),\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport { SiteContext, ContextProviderComponent };","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/jamstack-ecommerce/context/mainContext.js"],"names":["toast","React","STORAGE_KEY","initialState","cart","numberOfItemsInCart","total","SiteContext","createContext","calculateTotal","reduce","acc","next","quantity","JSON","parse","price","ContextProviderComponent","Component","item","storageState","window","localStorage","getItem","index","findIndex","cartItem","id","setItem","stringify","length","forceUpdate","Number","push","position","POSITION","TOP_LEFT","filter","c","componentDidMount","render","state","addToCart","clearCart","removeFromCart","setItemQuantity","props","children"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify'\r\nimport React from 'react'\r\nconst STORAGE_KEY = 'NEXT_ECOMMERCE_STARTER_'\r\n\r\nconst initialState = {\r\n  cart: [],\r\n  numberOfItemsInCart: 0,\r\n  total: 0\r\n}\r\n\r\nconst SiteContext = React.createContext()\r\n\r\nfunction calculateTotal(cart) {\r\n  const total = cart.reduce((acc, next) => {\r\n    const quantity = next.quantity\r\n    acc = acc + JSON.parse(next.price) * quantity\r\n    return acc\r\n  }, 0)\r\n  return total\r\n}\r\n\r\nclass ContextProviderComponent extends React.Component {\r\n  componentDidMount() {\r\n    if (typeof window !== 'undefined') {\r\n      const storageState = window.localStorage.getItem(STORAGE_KEY)\r\n      if (!storageState) {\r\n        window.localStorage.setItem(STORAGE_KEY, JSON.stringify(initialState))\r\n      }\r\n    }\r\n  }\r\n\r\n  setItemQuantity = (item) => {\r\n    const storageState = JSON.parse(window.localStorage.getItem(STORAGE_KEY))\r\n    const { cart } = storageState\r\n    const index = cart.findIndex(cartItem => cartItem.id === item.id)\r\n    cart[index].quantity = item.quantity\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify({\r\n      cart, numberOfItemsInCart: cart.length, total: calculateTotal(cart)\r\n    }))\r\n    this.forceUpdate()\r\n  }\r\n\r\n  addToCart = item => {\r\n    const storageState = JSON.parse(window.localStorage.getItem(STORAGE_KEY))\r\n    const { cart } = storageState\r\n    if (cart.length) {\r\n      const index = cart.findIndex(cartItem => cartItem.id === item.id)\r\n      if (index >= Number(0)) {\r\n        /* If this item is already in the cart, update the quantity */\r\n        cart[index].quantity = cart[index].quantity + item.quantity\r\n      } else {\r\n        /* If this item is not yet in the cart, add it */\r\n        cart.push(item)\r\n      }\r\n    } else {\r\n      /* If no items in the cart, add the first item. */\r\n      cart.push(item)\r\n    }\r\n\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify({\r\n      cart, numberOfItemsInCart: cart.length, total: calculateTotal(cart)\r\n    }))\r\n    toast(\"Successfully added item to cart!\", {\r\n      position: toast.POSITION.TOP_LEFT\r\n    })\r\n    this.forceUpdate()\r\n  }\r\n\r\n  removeFromCart = (item) => {\r\n    const storageState = JSON.parse(window.localStorage.getItem(STORAGE_KEY))\r\n    let { cart } = storageState\r\n    cart = cart.filter(c => c.id !== item.id)\r\n\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify({\r\n      cart, numberOfItemsInCart: cart.length, total: calculateTotal(cart)\r\n    }))\r\n    this.forceUpdate()\r\n  }\r\n\r\n  clearCart = () => {\r\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(initialState))\r\n    this.forceUpdate()\r\n  }\r\n\r\n  render() {\r\n    let state = initialState\r\n    if (typeof window !== 'undefined') {\r\n      const storageState = window.localStorage.getItem(STORAGE_KEY)\r\n      if (storageState) {\r\n        state = JSON.parse(storageState)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <SiteContext.Provider value={{\r\n        ...state,\r\n         addToCart: this.addToCart,\r\n         clearCart: this.clearCart,\r\n         removeFromCart: this.removeFromCart,\r\n         setItemQuantity: this.setItemQuantity\r\n      }}>\r\n       {this.props.children}\r\n     </SiteContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport {\r\n  SiteContext,\r\n  ContextProviderComponent\r\n}"]},"metadata":{},"sourceType":"module"}