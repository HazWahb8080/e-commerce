{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\jamstack-ecommerce\\\\pages\\\\admin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport SignUp from '../components/formComponents/SignUp';\nimport ConfirmSignUp from '../components/formComponents/ConfirmSignUp';\nimport SignIn from '../components/formComponents/SignIn';\nimport Inventory from '../components/Inventory';\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      formState: 'signUp',\n      isAdmin: false\n    });\n\n    _defineProperty(this, \"toggleFormState\", formState => {\n      this.setState(() => ({\n        formState\n      }));\n    });\n\n    _defineProperty(this, \"signUp\", async form => {\n      const {\n        username,\n        email,\n        password\n      } = form; // sign up\n\n      this.setState({\n        formState: 'confirmSignUp'\n      });\n    });\n\n    _defineProperty(this, \"confirmSignUp\", async form => {\n      const {\n        username,\n        authcode\n      } = form; // confirm sign up\n\n      this.setState({\n        formState: 'signIn'\n      });\n    });\n\n    _defineProperty(this, \"signIn\", async form => {\n      const {\n        username,\n        password\n      } = form; // signIn\n\n      this.setState({\n        formState: 'signedIn',\n        isAdmin: true\n      });\n    });\n\n    _defineProperty(this, \"signOut\", async () => {\n      // sign out\n      this.setState({\n        formState: 'signUp'\n      });\n    });\n  }\n\n  async componentDidMount() {// check and update signed in state\n  }\n\n  render() {\n    const {\n      formState,\n      isAdmin\n    } = this.state;\n\n    const renderForm = (formState, state) => {\n      switch (formState) {\n        case 'signUp':\n          return /*#__PURE__*/_jsxDEV(SignUp, _objectSpread(_objectSpread({}, state), {}, {\n            signUp: this.signUp,\n            toggleFormState: this.toggleFormState\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 18\n          }, this);\n\n        case 'confirmSignUp':\n          return /*#__PURE__*/_jsxDEV(ConfirmSignUp, _objectSpread(_objectSpread({}, state), {}, {\n            confirmSignUp: this.confirmSignUp\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }, this);\n\n        case 'signIn':\n          return /*#__PURE__*/_jsxDEV(SignIn, _objectSpread(_objectSpread({}, state), {}, {\n            signIn: this.signIn,\n            toggleFormState: this.toggleFormState\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 18\n          }, this);\n\n        case 'signedIn':\n          return isAdmin ? /*#__PURE__*/_jsxDEV(Inventory, _objectSpread(_objectSpread({}, state), {}, {\n            signOut: this.signOut\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Not an admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 78\n          }, this);\n\n        default:\n          return null;\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-fw flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-10\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl font-light\",\n            children: \"Admin Panel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), renderForm(formState)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/jamstack-ecommerce/pages/admin.js"],"names":["React","SignUp","ConfirmSignUp","SignIn","Inventory","Admin","Component","formState","isAdmin","setState","form","username","email","password","authcode","componentDidMount","render","state","renderForm","signUp","toggleFormState","confirmSignUp","signIn","signOut"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport SignUp from '../components/formComponents/SignUp'\r\nimport ConfirmSignUp from '../components/formComponents/ConfirmSignUp'\r\nimport SignIn from '../components/formComponents/SignIn'\r\nimport Inventory from '../components/Inventory'\r\n\r\nclass Admin extends React.Component {\r\n  state = { formState: 'signUp', isAdmin: false }\r\n  toggleFormState = (formState) => {\r\n    this.setState(() => ({ formState }))\r\n  }\r\n  async componentDidMount() {\r\n    // check and update signed in state\r\n  }\r\n  signUp = async (form) => {\r\n    const { username, email, password } = form\r\n    // sign up\r\n    this.setState({ formState: 'confirmSignUp' })\r\n  }\r\n  confirmSignUp = async (form) => {\r\n    const { username, authcode } = form\r\n    // confirm sign up\r\n    this.setState({ formState: 'signIn' })\r\n  }\r\n  signIn = async (form) => {\r\n    const { username, password } = form\r\n    // signIn\r\n    this.setState({ formState: 'signedIn', isAdmin: true })\r\n  }\r\n  signOut = async() => {\r\n    // sign out\r\n    this.setState({ formState: 'signUp' })\r\n  }\r\n\r\n  render() {\r\n    const { formState, isAdmin } = this.state\r\n    const renderForm = (formState, state) => {\r\n      switch(formState) {\r\n        case 'signUp':\r\n          return <SignUp {...state} signUp={this.signUp} toggleFormState={this.toggleFormState} />\r\n        case 'confirmSignUp':\r\n          return <ConfirmSignUp {...state} confirmSignUp={this.confirmSignUp} />\r\n        case 'signIn':\r\n          return <SignIn {...state} signIn={this.signIn} toggleFormState={this.toggleFormState} />\r\n        case 'signedIn':\r\n          return isAdmin ? <Inventory {...state} signOut={this.signOut} /> : <h3>Not an admin</h3>\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"max-w-fw flex flex-col\">\r\n          <div className=\"pt-10\">\r\n            <h1 className=\"text-5xl font-light\">Admin Panel</h1>\r\n          </div>\r\n          {\r\n            renderForm(formState)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Admin"]},"metadata":{},"sourceType":"module"}