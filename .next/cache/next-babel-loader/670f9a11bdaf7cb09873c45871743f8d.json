{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport inventory from './inventory';\n/*\r\nInventory items should adhere to the following schema:\r\ntype Product {\r\n  id: ID!\r\n  categories: [String]!\r\n  price: Float!\r\n  name: String!\r\n  image: String!\r\n  description: String!\r\n  currentInventory: Int!\r\n  brand: String\r\n  sku: ID\r\n}\r\n*/\n\nfunction fetchInventory() {\n  return _fetchInventory.apply(this, arguments);\n}\n\nfunction _fetchInventory() {\n  _fetchInventory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", Promise.resolve(inventory));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchInventory.apply(this, arguments);\n}\n\nexport { fetchInventory, inventory as staticInventory };","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/jamstack-ecommerce/utils/inventoryProvider.js"],"names":["inventory","fetchInventory","Promise","resolve","staticInventory"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;SAEeC,c;;;;;6EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,OAAO,CAACC,OAAR,CAAgBH,SAAhB,CAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKA,SACEC,cADF,EACkBD,SAAS,IAAII,eAD/B","sourcesContent":["import inventory from './inventory'\r\n\r\n/*\r\nInventory items should adhere to the following schema:\r\ntype Product {\r\n  id: ID!\r\n  categories: [String]!\r\n  price: Float!\r\n  name: String!\r\n  image: String!\r\n  description: String!\r\n  currentInventory: Int!\r\n  brand: String\r\n  sku: ID\r\n}\r\n*/\r\n\r\nasync function fetchInventory() {\r\n  // const inventory = API.get(apiUrl)\r\n  return Promise.resolve(inventory)\r\n}\r\n\r\nexport {\r\n  fetchInventory, inventory as staticInventory\r\n}"]},"metadata":{},"sourceType":"module"}