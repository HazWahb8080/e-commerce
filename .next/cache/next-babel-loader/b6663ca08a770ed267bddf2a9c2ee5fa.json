{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\jamstack-ecommerce\\\\pages\\\\admin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport SignUp from '../components/formComponents/SignUp';\nimport ConfirmSignUp from '../components/formComponents/ConfirmSignUp';\nimport SignIn from '../components/formComponents/SignIn';\nimport Inventory from '../components/Inventory';\n\nvar Admin = /*#__PURE__*/function (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  var _super = _createSuper(Admin);\n\n  function Admin() {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      formState: 'signUp',\n      isAdmin: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleFormState\", function (formState) {\n      _this.setState(function () {\n        return {\n          formState: formState\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signUp\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(form) {\n        var username, email, password;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                username = form.username, email = form.email, password = form.password; // sign up\n\n                _this.setState({\n                  formState: 'confirmSignUp'\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmSignUp\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(form) {\n        var username, authcode;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                username = form.username, authcode = form.authcode; // confirm sign up\n\n                _this.setState({\n                  formState: 'signIn'\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"signIn\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(form) {\n        var username, password;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                username = form.username, password = form.password; // signIn\n\n                _this.setState({\n                  formState: 'signedIn',\n                  isAdmin: true\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"signOut\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // sign out\n              _this.setState({\n                formState: 'signUp'\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          formState = _this$state.formState,\n          isAdmin = _this$state.isAdmin;\n\n      var renderForm = function renderForm(formState, state) {\n        switch (formState) {\n          case 'signUp':\n            return /*#__PURE__*/_jsxDEV(SignUp, _objectSpread(_objectSpread({}, state), {}, {\n              signUp: _this2.signUp,\n              toggleFormState: _this2.toggleFormState\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 18\n            }, _this2);\n\n          case 'confirmSignUp':\n            return /*#__PURE__*/_jsxDEV(ConfirmSignUp, _objectSpread(_objectSpread({}, state), {}, {\n              confirmSignUp: _this2.confirmSignUp\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 18\n            }, _this2);\n\n          case 'signIn':\n            return /*#__PURE__*/_jsxDEV(SignIn, _objectSpread(_objectSpread({}, state), {}, {\n              signIn: _this2.signIn,\n              toggleFormState: _this2.toggleFormState\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 18\n            }, _this2);\n\n          case 'signedIn':\n            return isAdmin ? /*#__PURE__*/_jsxDEV(Inventory, _objectSpread(_objectSpread({}, state), {}, {\n              signOut: _this2.signOut\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 28\n            }, _this2) : /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Not an admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 78\n            }, _this2);\n\n          default:\n            return null;\n        }\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-fw flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-10\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-5xl font-light\",\n              children: \"Admin Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), renderForm(formState)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/jamstack-ecommerce/pages/admin.js"],"names":["React","SignUp","ConfirmSignUp","SignIn","Inventory","Admin","formState","isAdmin","setState","form","username","email","password","authcode","state","renderForm","signUp","toggleFormState","confirmSignUp","signIn","signOut","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEMC,K;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,K;;sEACU,UAACD,SAAD,EAAe;AAC/B,YAAKE,QAAL,CAAc;AAAA,eAAO;AAAEF,UAAAA,SAAS,EAATA;AAAF,SAAP;AAAA,OAAd;AACD,K;;;0EAIQ,iBAAOG,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBAAAA,QADD,GAC+BD,IAD/B,CACCC,QADD,EACWC,KADX,GAC+BF,IAD/B,CACWE,KADX,EACkBC,QADlB,GAC+BH,IAD/B,CACkBG,QADlB,EAEP;;AACA,sBAAKJ,QAAL,CAAc;AAAEF,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;2EAKO,kBAAOG,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,gBAAAA,QADM,GACiBD,IADjB,CACNC,QADM,EACIG,QADJ,GACiBJ,IADjB,CACII,QADJ,EAEd;;AACA,sBAAKL,QAAL,CAAc;AAAEF,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;2EAKP,kBAAOG,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBAAAA,QADD,GACwBD,IADxB,CACCC,QADD,EACWE,QADX,GACwBH,IADxB,CACWG,QADX,EAEP;;AACA,sBAAKJ,QAAL,CAAc;AAAEF,kBAAAA,SAAS,EAAE,UAAb;AAAyBC,kBAAAA,OAAO,EAAE;AAAlC,iBAAd;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;oIAKC;AAAA;AAAA;AAAA;AAAA;AACR;AACA,oBAAKC,QAAL,CAAc;AAAEF,gBAAAA,SAAS,EAAE;AAAb,eAAd;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAKD;AAAA;;AAAA,wBACwB,KAAKQ,KAD7B;AAAA,UACCR,SADD,eACCA,SADD;AAAA,UACYC,OADZ,eACYA,OADZ;;AAEP,UAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACT,SAAD,EAAYQ,KAAZ,EAAsB;AACvC,gBAAOR,SAAP;AACE,eAAK,QAAL;AACE,gCAAO,QAAC,MAAD,kCAAYQ,KAAZ;AAAmB,cAAA,MAAM,EAAE,MAAI,CAACE,MAAhC;AAAwC,cAAA,eAAe,EAAE,MAAI,CAACC;AAA9D;AAAA;AAAA;AAAA;AAAA,sBAAP;;AACF,eAAK,eAAL;AACE,gCAAO,QAAC,aAAD,kCAAmBH,KAAnB;AAA0B,cAAA,aAAa,EAAE,MAAI,CAACI;AAA9C;AAAA;AAAA;AAAA;AAAA,sBAAP;;AACF,eAAK,QAAL;AACE,gCAAO,QAAC,MAAD,kCAAYJ,KAAZ;AAAmB,cAAA,MAAM,EAAE,MAAI,CAACK,MAAhC;AAAwC,cAAA,eAAe,EAAE,MAAI,CAACF;AAA9D;AAAA;AAAA;AAAA;AAAA,sBAAP;;AACF,eAAK,UAAL;AACE,mBAAOV,OAAO,gBAAG,QAAC,SAAD,kCAAeO,KAAf;AAAsB,cAAA,OAAO,EAAE,MAAI,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,sBAAH,gBAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnE;;AACF;AACE,mBAAO,IAAP;AAVJ;AAYD,OAbD;;AAeA,0BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAKIL,UAAU,CAACT,SAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;;;;EAzDiBN,KAAK,CAACqB,S;;AA4D1B,eAAehB,KAAf","sourcesContent":["import React from 'react'\r\nimport SignUp from '../components/formComponents/SignUp'\r\nimport ConfirmSignUp from '../components/formComponents/ConfirmSignUp'\r\nimport SignIn from '../components/formComponents/SignIn'\r\nimport Inventory from '../components/Inventory'\r\n\r\nclass Admin extends React.Component {\r\n  state = { formState: 'signUp', isAdmin: false }\r\n  toggleFormState = (formState) => {\r\n    this.setState(() => ({ formState }))\r\n  }\r\n  async componentDidMount() {\r\n    // check and update signed in state\r\n  }\r\n  signUp = async (form) => {\r\n    const { username, email, password } = form\r\n    // sign up\r\n    this.setState({ formState: 'confirmSignUp' })\r\n  }\r\n  confirmSignUp = async (form) => {\r\n    const { username, authcode } = form\r\n    // confirm sign up\r\n    this.setState({ formState: 'signIn' })\r\n  }\r\n  signIn = async (form) => {\r\n    const { username, password } = form\r\n    // signIn\r\n    this.setState({ formState: 'signedIn', isAdmin: true })\r\n  }\r\n  signOut = async() => {\r\n    // sign out\r\n    this.setState({ formState: 'signUp' })\r\n  }\r\n\r\n  render() {\r\n    const { formState, isAdmin } = this.state\r\n    const renderForm = (formState, state) => {\r\n      switch(formState) {\r\n        case 'signUp':\r\n          return <SignUp {...state} signUp={this.signUp} toggleFormState={this.toggleFormState} />\r\n        case 'confirmSignUp':\r\n          return <ConfirmSignUp {...state} confirmSignUp={this.confirmSignUp} />\r\n        case 'signIn':\r\n          return <SignIn {...state} signIn={this.signIn} toggleFormState={this.toggleFormState} />\r\n        case 'signedIn':\r\n          return isAdmin ? <Inventory {...state} signOut={this.signOut} /> : <h3>Not an admin</h3>\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"max-w-fw flex flex-col\">\r\n          <div className=\"pt-10\">\r\n            <h1 className=\"text-5xl font-light\">Admin Panel</h1>\r\n          </div>\r\n          {\r\n            renderForm(formState)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Admin"]},"metadata":{},"sourceType":"module"}